'use client';

import clsx from "clsx";
import { ButtonSubmit, FormField } from "@/components/forms";
import stylesForm from "@/components/forms/Form.module.css";
import { GroupField } from "@/components/forms/Group";
import { Select } from "@/components/forms/Select";
import { Typography } from "@/components/Typography";
import { Checkbox } from "@/shared/ui/Checkbox";

import { counrtyList } from "@/shared/utils/country";
import stylesLayout from "@/styles/module/Layout.module.css";
import { aumList, geoFocusList, investmentFocusList, options } from "@/app/settings/entities/company/CompanyInformation/utils/options";
import { useAuthRegisterContext } from "../../contexts/AuthRegisterProvider";
import { register } from "../../sign-up/company-step/server-actions/register";
import { useFormState } from "react-dom";
import { useSearchParams } from "next/navigation";

export const RegisterCompanyStepForm = () => {
  const params = useSearchParams()

  /**
   * The case use only for linkedIn
   */
  const providerId = params.get('provider_id')

  const [state, action] = useFormState(register, undefined);
  const { appendFields, storeAuthRegister } = useAuthRegisterContext();



  return (
    <div className={stylesForm.FormWrapper}>
      <form
        className={clsx(
          stylesForm.Form,
          stylesLayout.Flex,
          stylesLayout.JCC,
          stylesLayout.Gap_20,
        )}
        action={(event) => {
          appendFields('signUpCompany', event)

          action(storeAuthRegister)
        }}
      >
        <Select
          name="company_type"
          caption="Company Type"
          options={options}
          errors={state?.errors.company_type}
        />

        <FormField
          type="text"
          name="company_name"
          caption="Company Name"
          errors={state?.errors.company_name}
        />

        <Select
          name="country"
          caption="Country"
          options={counrtyList}
          errors={state?.errors.country}
        />

        <FormField caption="Title/Occupation (optional)" name="occupation" type="text" errors={state?.errors.occupation} />

        <GroupField caption={<>AUM ($) <Typography textTransform="lowercase" color="primary-50" size="xs" fontWeight="500" as="span">(optional)</Typography> </>} name="aum" type="radio" options={aumList} errors={state?.errors.aum} />
        <GroupField caption={<>Investment Focus <Typography textTransform="lowercase" color="primary-50" size="xs" fontWeight="500" as="span">(optional)</Typography> </>} name="investment_focus" type="checkbox" options={investmentFocusList} multiple errors={state?.errors.investment_focus} />
        <GroupField caption={<>Geo Focus <Typography textTransform="lowercase" color="primary-50" size="xs" fontWeight="500" as="span">(optional)</Typography> </>} name="geo_focus" type="checkbox" options={geoFocusList} multiple errors={state?.errors.geo_focus} />

        <FormField caption="Phone Number" name="phone" type="text" errors={state?.errors.phone} />

        {providerId && <input hidden readOnly type="text" name="provider_id" value={providerId} />}



        <div style={{
          width: "100%",
        }}>
          <Checkbox errors={state?.errors.agree} name="agree" labelText="I consent to the processing of my personal data" />
        </div>

        <ButtonSubmit title="Finish" />
      </form>

      <Typography color="primary-50" as="div">
        <Typography as="h6" fontWeight="700">Disclaimer: AI-Generated Prefilled Data</Typography>
        The information in this form is generated by AI for your convenience. Please review and verify all data before submitting, as it may not be fully accurate or complete. Please ensure the correctness of the information. The platform is not liable for any errors or issues arising from the use of AI-generated data. Modify any fields as necessary before submitting.
      </Typography>
    </div>
  );
};
